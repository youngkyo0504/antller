import Layout from "@components/Layouts/Layout";
import InOutTransitionContainer from "@components/Layouts/TransitionContainer";
import Portfolio from "@components/WorkStore/Portfolio";
import { AnimateSharedLayout, motion } from "framer-motion";
import type { NextPage } from "next";
import Head from "next/head";
import getPosts from "src/lib/mdxFiles";

const WorkPage: NextPage = () => {
  return (
    <>
      <Head>
        <title>Work details</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <InOutTransitionContainer></InOutTransitionContainer>
      </Layout>
    </>
  );
};

export default WorkPage;
export const getStaticProps = () => {
  const posts = getPosts();

  return {
    props: {
      posts,
    },
  };
};

import { MDXProvider } from "@mdx-js/react";
import { serialize } from "next-mdx-remote/serialize";
import { MDXRemote, MDXRemoteSerializeResult } from "next-mdx-remote";
const Test = () => {
  return <div tw="text-blue-300">test!!!!!</div>;
};
const components = { Test };
interface TestPageProps {
  source: MDXRemoteSerializeResult<Record<string, unknown>>;
}

export const TestPage: NextPage<TestPageProps> = ({ source }) => {
  return (
    <MDXProvider components={components}>
      <div className="wrapper">
        <MDXRemote {...source} />
      </div>
    </MDXProvider>
  );
};

export async function getStaticProps() {
  // MDX text - can be from a local file, database, anywhere
  const source = "Some **mdx** text, with a component <Test />";
  const mdxSource = await serialize(source);
  return { props: { source: mdxSource } };
}

export default TestPage;
